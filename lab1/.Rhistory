help.start()
ddt = read.csv("DDT.csv")
ddt <- read.csv("DDT.csv")
#Task 1
getwd()
ddt <- read.csv("DDT.csv")
##Task 1
getwd()
##Task 2
ddt <- read.csv("DDT.csv")
#First six lines
head(ddt)
setwd("~/MATH-4753-Stats/Lab1")
##Task 1
getwd()
##Task 2
ddt <- read.csv("DDT.csv")
#First six lines
head(ddt)
##Task 3
#Variable in DDT
names(ddt)
#How many qualitative variables are in DDT?
2
#How many quantitative variables are in DDT?
4
sp = with(ddt, table(SPECIES))
sp
#How many species are in the ddt data set?
3
#Subset the ddt data set so that we see only the observations with SPECIES, LMBASS and WEIGHT bigger than 800gms
with(ddt, ddt[SPECIES=="LMBASS" & WEIGHT>800,])
#Subset the ddt data set so that we see only those observations where the RIVER is SCM and DDT bigger than 4.0
with(ddt, ddt[RIVER=="SCM" & DDT>4.0,])
##Task 4
summary(ddt)
#Find the mean length of fish in the ddt data frame
45.18
#Find the mean length of fish in the ddt data frame
mean(ddt$LENGTH)
#What is the standard deviation of the weight of fish in the ddt data frame?
sd(ddt$WEIGHT)
#Is this the plot of LENGTH vs WEIGHT from the ddt data frame?
plot(data=ddt, LENGTH~WEIGHT)
No
#If v=1:20 what is the last value of v/20?
v = 1:20
v[20] / 20
##Task 5
#Make a table of the rivers.
riv = with(ddt, table(RIVER))
riv
#Make a color coded barplot of the rivers
barplot(riv, col=rainbow(4))
#Make a table of the rivers crossed with the species of fish
spriv = with(ddt, table(SPECIES, RIVER))
spriv
#Make a barplot of the rivers crossed with the species of fish.
barplot(spriv)
<<<<<<< HEAD
=======
#What class is the object ddt?
class(ddt)
#what are the variables in the data frame?
names(ddt)
help.start()
?mean
mean(x = c(1,4,5,6))
v <- c(1,4,5,6)
v
v*2
2*v
m <- 2*v
m
sink("Rcode.txt")
objects()
v <- 1:10
v^2
list(v = v, vsq = v^2)
sink()
objects()
ls()
rm(v,x,xm)
# vectors
x <- c(1,2,3,6)
x
X # case sensitive
ls()
objects()
rm(x)
objects()
assign("y", c(7,8,10,12))
y
c(x,y)
sum(x)/4
mean(x)
rep(x, times = 4)
rep(x, each = 4)
var(x)
sum((x - mean(x))^2)/(length(x)-1)
state <- c("tas", "sa", "qld", "nsw", "nsw", "nt", "wa", "wa",
"qld", "vic", "nsw", "vic", "qld", "qld", "sa", "tas",
"sa", "nt", "wa", "vic", "qld", "nsw", "nsw", "wa",
"sa", "act", "nsw", "vic", "vic", "act")
state
statef <- factor(state)
statef
attributes(statef)
levels(statef)
incomes <- c(60, 49, 40, 61, 64, 60, 59, 54, 62, 69, 70, 42, 56,
61, 61, 61, 58, 51, 48, 65, 49, 49, 41, 48, 52, 46,
59, 46, 58, 43)
length(statef)
length(incomes)
tapply(X = incomes, INDEX = statef,FUN = mean)
tapply(X = incomes, INDEX = statef,FUN = sd)
myf = function(x) mean(x)/sd(x) # more on this
tapply(X = incomes,INDEX = statef, FUN = myf)
>>>>>>> 3d4b63d71b53ab4c55eef0be38e945610668bbe0
setwd("C:/Users/EaoR/developer/MATH-4753/lab1")
=======
##Task 6
#Make a pie chart of Fish SPECIES
pie(ddt$SPECIES)
##Task 9
library(ggplot2)
##Task 6
#Make a pie chart of Fish SPECIES
pie(with(ddt, table(SPECIES)))
#Make a pie chart of RIVERS
pie(riv)
#boxplots of each quantitative variable
#Notice the use of layout()
layout(matrix(c(1,2,3),nr=1,nc=3))# 1 row 3 cols
layout.show(3)
with(ddt,boxplot(LENGTH,ylab="LENGTH",col="Blue",notch=TRUE))
with(ddt,boxplot(WEIGHT,ylab="WEIGHT",col="Green",notch=TRUE))
with(ddt,boxplot(MILE,ylab="MILE",col="Red",notch=TRUE))
layout(matrix(c(1,2,3),nr=1,nc=3))# 1 row 3 cols
layout.show(3)
with(ddt, boxplot(DDT, ylab="DDT", col="Blue", notch=TRUE))
with(ddt, boxplot(WEIGHT, ylab="WEIGHT", col="Green", notch=TRUE))
with(ddt, boxplot(LENGTH, ylab="LENGTH", col="Red", notch=TRUE))
#boxplots (Notice where the quant. and Qual. variables are placed)
boxplot(WEIGHT~SPECIES,col="Red",data=ddt)
#boxplots of LENGTH by RIVER
boxplot(LENGTH~RIVER,col="Green",data=ddt)
#How to interpret the coplot (color here is redundant)
coplot(WEIGHT~LENGTH|RIVER,data=ddt,col=rivcol)
#embellish the plot with species using color using 'ifelse(test,yes,no)'
fishcol=with(ddt,ifelse(SPECIES=="CCATFISH","Red",
ifelse(SPECIES=="SMBUFFALO","Blue","Green")))
#River col
rivcol=with(ddt, ifelse(RIVER=="FCM","Red",
ifelse(RIVER=="LCM","Blue",
ifelse(RIVER=="SCM","Green","Black"))))
head(fishcol)
plot(WEIGHT~LENGTH,data=ddt,col=fishcol)
#Add river text
text(WEIGHT~LENGTH,RIVER,pos=2,cex=0.5,data=ddt)
#The above plot is messy -- can we do better? Use coplots
coplot(WEIGHT~LENGTH|RIVER,data=ddt,col=fishcol)
#How to interpret the coplot (color here is redundant)
coplot(WEIGHT~LENGTH|RIVER,data=ddt,col=rivcol)
#Given the combinations of all levels of SPECIES and RIVER = RIVER*SPECIES
coplot(WEIGHT~LENGTH|RIVER*SPECIES,data=ddt,col=fishcol)
##Task 8
#Make a coplot of LENGTH Vs WEIGHT given RIVER
coplot(LENGTH~WEIGHT|RIVER, data=ddt)
#Make a coplot of DDT Vs WEIGHT given SPECIES
coplot(DDT~WEIGTH|SPECIES, data=ddt)
#Make a coplot of DDT Vs WEIGHT given SPECIES
coplot(DDT~WEIGHT|SPECIES, data=ddt)
##Task 9
library(ggplot2)
g <- ggplot(data = ddt, aes(x = WEIGHT, y = LENGTH))
g <- g + geom_point()
g
ddt %>% filter(WEIGHT > 200, LENGTH > 30, DDT < 300) %>% mutate(AREA = LENGTH*WEIGHT) %>% ggplot(aes(x=AREA,y=DDT,fill=RIVER)) + geom_boxplot() + ggtitle("How to use dplyr and ggplot")
#Using dplyr
library(dplyr)
library(ggplot2)
ddt %>% filter(WEIGHT > 200, LENGTH > 30, DDT < 300) %>% mutate(AREA = LENGTH*WEIGHT) %>% ggplot(aes(x=AREA,y=DDT,fill=RIVER)) + geom_boxplot() + ggtitle("How to use dplyr and ggplot")
##Task 9
library(dplyr)
library(ggplot2)
g <- ggplot(data = ddt, aes(x = SPECIES, y = WEIGHT, fill=RIVER))
g <- g + geom_boxplot() + ggtitle("Lucas Ho")
g
##Task 9
library(dplyr)
library(ggplot2)
g <- ggplot(data = ddt, aes(x = SPECIES, y = WEIGHT, fill=RIVER)) + geom_boxplot() + ggtitle("Lucas Ho")
##Task 8
#Make a coplot of LENGTH Vs WEIGHT given RIVER
coplot(LENGTH~WEIGHT|RIVER, data=ddt)
#Make a coplot of DDT Vs WEIGHT given SPECIES
coplot(DDT~WEIGHT|SPECIES, data=ddt)
##Task 9
library(dplyr)
library(ggplot2)
ggplot(data = ddt, aes(x = SPECIES, y = WEIGHT, fill=RIVER)) + geom_boxplot() + ggtitle("Lucas Ho")
ggplot(data=ddt, aes(x = RIVER, y = LENGTH, fill=SPECIES)) + geom_violin()
ggplot(data=ddt, aes(x = RIVER, y = LENGTH, fill=SPECIES)) + geom_violin() + ggtitle("Lucas Ho")
ggplot(data=ddt, aes(x=WEIGHT, y=LENGTH, fill=SPECIES)) + geom_plot() + ggtitle("Lucas Ho")
ggplot(data=ddt, aes(x=WEIGHT, y=LENGTH, fill=SPECIES)) + geom_point() + ggtitle("Lucas Ho")
# How to use a pre-made function
# highlight and send the complete function to R
scatterhist = function(x, y, xlab="", ylab=""){
zones=matrix(c(2,0,1,3), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(3,3,1,1))
plot(x,y)
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), space=0, horiz=TRUE)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
with(ddt, scatterhist(LENGTH,WEIGHT, xlab="LENGTH"))
#Make a histogram
with(ddt, hist(DDT))
library(data.table)
>>>>>>> 37abe63533a895c094fcc06d45627970eb7598fd
