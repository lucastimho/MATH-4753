setwd("~/MATH-4753-Stats/Demo")
ddt <- read.csv("DDT.csv")
summary(ddt)
head(ddt)
ddt %>% filter(SPECIES == "LMBASS" & WEIGHT > 1200) %>% summarize( n = n())
library(dplyr)
ddt %>% filter(SPECIES == "LMBASS" & WEIGHT > 1200) %>% summarize( n = n())
ddt %>% filter(SPECIES == "SMBUFFULO") %>% summarise(mean = mean(WEIGTH), n = n())
ddt %>% filter(SPECIES == "SMBUFFULO") %>% summarise(mean = mean(WEIGHT), n = n())
ddt %>% filter(SPECIES == "SMBUFFULO") %>% summarise(mean = mean(WEIGHT), n = n())
ddt %>% filter(SPECIES == "SMBUFFULO") %>% summarise(mean = mean(WEIGHT))
with(ddt, table(SPECIES))
with(ddt, ddt[SPECIES="SMBUFFULO",])
with(ddt, ddt[SPECIES=="SMBUFFULO",])
with(ddt, ddt[SPECIES=="SMBUFFULO"])
with(ddt, ddt[SPECIES=="SMBUFFULO", "WEIGHT",])
ddt %>% filter(SPECIES == "SMBUFFALO") %>% summarise(mean = mean(WEIGHT), n=n())
ddt %>% filter(SPECIES=="CATFISH" & "DDT" > 33) %>% summarise(mean=mean(LENGTH), n=n())
ddt %>% filter(SPECIES=="CCATFISH" & "DDT" > 33) %>% summarise(mean=mean(LENGTH), n=n())
ddt %>% filter(SPECIES=="CCATFISH" & DDT > 33) %>% summarise(mean=mean(LENGTH), n=n())
ddt %>% filter(SPECIES=="LMBASS" || SPECIES=="SMBUFFALO") %>% summarise(sd=sd(DDT), n=n())
ddt %>% filter(SPECIES=="LMBASS" | SPECIES=="SMBUFFALO") %>% summarise(sd=sd(DDT), n=n())
ddt %>% filter(LENGTH > 40 & WEIGHT > 1000) %>% summarise(n=n())
library(dplyr)
ddt <- read.csv("DDT.csv")
summary(ddt)
head(ddt)
ddt %>% filter(SPECIES == "LMBASS" & WEIGHT > 1200) %>% summarize( n = n())
ddt %>% filter(SPECIES == "LMBASS" & RIVER == "TRM") %>% summarize( n = n())
ddt %>% filter(SPECIES == "SMBUFFALO") %>% summarize(mean=mean(WEIGHT), n = n())
ddt %>% filter(RIVER == "TRM") %>% summarize(meansq=mean(LENGTH^2), n = n())
setwd("~/MATH-4753-Stats/Demo")
library(dplyr)
ddt <- read.csv("DDT.csv")
summary(ddt)
head(ddt)
sd(ddt$WEIGHT)
mean(ddt$LENGTH)
with(ddt, ddt[LENGTH > 50])
with(ddt, ddt[LENGTH > 50,])
with(ddt, table(SPECIES > 50))
ddt %>% filter(LENGTH > 50) %>% summarize(n=n())
ddt %>% filter(LENGTH > 50 & SPECIES == "SMBUFFALO") %>% summarize(n=n())
setwd("~/MATH-4753-Stats/Lab3")
# Task 1
getwd()
# Task 2
spruce <- read.csv("SPRUCE.csv")
head(spruce)
#Top six lines
head(fin.df)
#This will be a different path if in the lab or at home
dird="\\Users\\HyDRO-Lab\\Desktop\\MATH4753\\DATAxls\\"
#my function to read data
myread=function(csv){
fl=paste(dird,csv,sep="")
read.table(fl,header=TRUE,sep=",")
}
#EASY WAY TO READ IN FILES
fin.df=myread("FINTUBES.csv")
spruce.df=myread("SPRUCE.csv")#MS pg478
# Or use
fin.df=read.table(file.choose(),header=TRUE,sep=",")
#Top six lines
head(fin.df)
#initial plot, compare to get perspective ranges and intercepts
with(fin.df,  {
layout(matrix(1:2,nr=2))
plot(HEAT~RATIO,bg="Blue",pch=21)
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,max(HEAT)),xlim=c(0,3))
}
)
# Or use
fin.df=read.table(file.choose(),header=TRUE,sep=",")
#Top six lines
head(fin.df)
#initial plot, compare to get perspective ranges and intercepts
with(fin.df,  {
layout(matrix(1:2,nr=2))
plot(HEAT~RATIO,bg="Blue",pch=21)
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,max(HEAT)),xlim=c(0,3))
}
)
#Using a new package
#Download and install ggplot2
library(ggplot2)
g=ggplot(fin.df, aes(x=RATIO,y=HEAT,colour=RATIO))
g=g+geom_point() + geom_line()+ geom_smooth(method="lm")
g+ggtitle("HEAT Vs RATIO")
# Task 3
with(spruce, plot(Height~BHDiamter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(0, 1.1*max(BHDiamter)))))
# Task 3
with(spruce, plot(Height~BHDiamter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(0, 1.1*max(BHDiameter)))))
# Task 3
with(spruce, plot(Height~BHDiamter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(c(0, 1.1*max(BHDiameter)))))
# Task 3
s <- with(spruce, plot(Height~BHDiamter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(c(0, 1.1*max(BHDiameter)))))
# Task 3
sp <- with(spruce, plot(Height~BHDiamter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(c(0, 1.1*max(BHDiameter)))))
sp
# Task 3
with(spruce, plot(Height~BHDiamter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(c(0, 1.1*max(BHDiameter)))))
# Task 3
layout(matrix(c(1),nr=1,nc=1))# 1 row 3 cols
# Task 1
getwd()
# Task 2
spruce <- read.csv("SPRUCE.csv")
head(spruce)
# Task 3
layout(matrix(c(1),nr=1,nc=1))# 1 row 3 cols
layout.show(1)
with(spruce, plot(Height~BHDiamter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(c(0, 1.1*max(BHDiameter)))))
with(spruce, plot(Height~BHDiameter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(c(0, 1.1*max(BHDiameter))))))
with(spruce, plot(Height~BHDiameter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height)), xlim(c(0, 1.1*max(BHDiameter))))))
with(spruce, plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(Height)), xlim(c(0,1.1*max(BHDiameter))))))
# Task 3
with(spruce, plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(Height)), xlim(c(0,1.1*max(BHDiameter))))))
setwd("~/MATH-4753-Stats/Lab3")
# Task 1
getwd()
# Task 2
spruce <- read.csv("SPRUCE.csv")
head(spruce)
# Task 3
with(spruce, plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(Height)), xlim(c(0,1.1*max(BHDiameter))))))
# Task 3
plot(spruce$Height, spruce$BHDiameter,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(Height)), xlim(c(0,1.1*max(BHDiameter)))))
# Task 3
spruce
# Task 3
spruce$Height
plot(spruce$Height, spruce$BHDiameter,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(Height)), xlim(c(0,1.1*max(BHDiameter)))))
# Task 1
getwd()
# Task 2
spruce.df <- read.csv("SPRUCE.csv")
head(spruce.df)
# Task 3
spruce.df$Height
plot(spruce.df$Height, spruce.df$BHDiameter,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(Height)), xlim(c(0,1.1*max(BHDiameter)))))
plot(spruce.df$BHDiameter, spruce.df$Height,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(Height)), xlim(c(0,1.1*max(BHDiameter)))))
plot(spruce.df$BHDiameter, spruce.df$Height,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(spruce.df$Height)), xlim(c(0,1.1*max(spruce.df$BHDiameter)))))
plot(spruce.df$BHDiameter, spruce.df$Height,bg="Blue",pch=21,cex=1.2,ylim(c(0,1.1*max(spruce.df$Height)), xlim(c(0,1.1*max(spruce.df$BHDiameter)))))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2,))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, ylim(c(0, 35)), xlim(c(0, 25))))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim(c(0, 25)), ylim(c(0, 35))))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim(c(0, 25)), ylim(c(0, 35)))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim(c(0, 25)), ylim(c(0, 35))))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim(c(0, 25)), ylim(c(0, 35))))
library(Intro2R)
install.packages("devtools")
devtools::install_github("https://github.com/MATHSTATSOU/Intro2R.git", build_vignettes = TRUE,force = TRUE)
round(138/223,4)
round((153+22-15)/223, 4)
# Task 3
spruce.df$Height
with(spruce.df, {
layout(matrix(1:2, nr=2))
plot(Height~BHDiameter, bg="Blue", pch=21, cex=1.2)
plot(Height~BHDiameter, bg="Blue", pch=21, cex=1.2, ylim(c(0, 1.1*max(Height))), xlim(c(0,1.1*max(BHDiameter))))
})
max(spruce.df$Height)
c(0, max(spruce.f$Height))
c(0, max(spruce.df$Height))
c(0, 1.1*max(spruce.df$Height))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 25)), ylim=(c(0, 35))))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
# Task 1
getwd()
# Task 2
spruce.df <- read.csv("SPRUCE.csv")
head(spruce.df)
# Task 3
splot <- with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
splot
# Task 3
splot = with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
# Task 1
getwd()
# Task 2
spruce.df <- read.csv("SPRUCE.csv")
head(spruce.df)
# Task 3
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
#Load library
#make a new plot
library(s20x)
trendscatter(HEAT~RATIO,f=0.7, data=fin.df)
#EASY WAY TO READ IN FILES
fin.df=myread("FINTUBES.csv")
#my function to read data
myread=function(csv){
fl=paste(dird,csv,sep="")
read.table(fl,header=TRUE,sep=",")
}
#EASY WAY TO READ IN FILES
fin.df=myread("FINTUBES.csv")
#This will be a different path if in the lab or at home
dird="\\Users\\HyDRO-Lab\\Desktop\\MATH4753\\DATAxls\\"
#my function to read data
myread=function(csv){
fl=paste(dird,csv,sep="")
read.table(fl,header=TRUE,sep=",")
}
#EASY WAY TO READ IN FILES
fin.df=myread("FINTUBES.csv")
spruce.df=myread("SPRUCE.csv")#MS pg478
#Plot the data
with(fin.df,
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,1.1*max(HEAT)),xlim=c(0,1.1*max(RATIO)))
)
# Or use
fin.df=read.table(file.choose(),header=TRUE,sep=",")
#Plot the data
with(fin.df,
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,1.1*max(HEAT)),xlim=c(0,1.1*max(RATIO)))
)
mtext("Dr Stewart's plot",side=3)
# make a linear model
ht.lm=with(fin.df, lm(HEAT~RATIO))
#plot a least squares regression line
abline(ht.lm)
#make a new plot
with(fin.df,
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,1.1*max(HEAT)),xlim=c(0,1.1*max(RATIO)))
)
#make yhat the estimates of E[HEAT | RATIO]
yhat=with(fin.df,predict(ht.lm,data.frame(RATIO)))
#OR you could use -- (yhat values the predicted values for all the RATIO values )
yhat=fitted(ht.lm)
# Draw in segments making the residuals (regression deviations)
with(fin.df,{
segments(RATIO,HEAT,RATIO,yhat)
})
abline(ht.lm)
setwd("~/MATH-4753-Stats/Lab3")
# Task 1
getwd()
# Task 2
spruce.df <- read.csv("SPRUCE.csv")
head(spruce.df)
# Task 3
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
library(s20x)
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.6,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.7,data=spruce.df)
layout()
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.6,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.7,data=spruce.df)
layout(matrix(1:3,nr=3,byrow=TRUE))
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.6,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.7,data=spruce.df)
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.6,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.7,data=spruce.df)
spruce.lm=with(spruce.df, lm(Height~BHDiameter))
abline(spruce.lm)
# Task 3
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
library(s20x)
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.6,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.7,data=spruce.df)
spruce.lm=with(spruce.df, lm(Height~BHDiameter))
abline(spruce.lm)
setwd("~/MATH-4753-Stats/Lab3")
# Task 1
getwd()
# Task 2
spruce.df <- read.csv("SPRUCE.csv")
head(spruce.df)
# Task 3
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
library(s20x)
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.6,data=spruce.df)
trendscatter(Height~BHDiameter,f=0.7,data=spruce.df)
spruce.lm=with(spruce.df, lm(Height~BHDiameter))
abline(spruce.lm)
# Task 4
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
layout.show(4)
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
abline(spruce.lm)
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
yhat=fitted(spruce.lm)
with(spruce.df, segments(BHDiameter,Height, BHDiameter, yhat))
abline(spruce.lm)
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
with(spruce.df, abline(h=mean(Height)))
abline(spruce.lm)
with(spruce.df, segments(BHDiameter,mean(Height),BHDiameter,yhat,col="Red"))
with(spruce.df, plot(Height~BHDiameter, bg="Blue",pch=21, cex=1.2, xlim=(c(0, 1.1*max(BHDiameter))), ylim=(c(0, 1.1*max(Height)))))
with(spruce.df, abline(h=mean(Height)))
with(spruce.df, segments(BHDiameter,Height,BHDiameter,mean(Height),col="Green"))
TSS=with(spruce.df,sum((Height-mean(Height))^2))
MSS=with(spruce.df, sum((yhat-mean(Height))^2))
RSS=with(spruce.df, sum((Height-yhat)^2))
TSS
MSS
RSS
MSS/TSS
TSS
MSS+RSS
# Task 5
summary(spruce.lm)
predict(spruce.lm, data.frame(BHDiameter=c(15,18,20)))
# Task 6
library(ggplot2)
g=ggplot(spruce.df, aes(y=Height, x=BHDiameter,colour=BHDiameter))
g=geom_point()+geom_line()+geom_smooth(method="lm")
g=ggplot(spruce.df, aes(y=Height, x=BHDiameter,colour=BHDiameter))
g=g+geom_point()+geom_line()+geom_smooth(method="lm")
g+ggtitle("Height vs BHDiameter")
shiny::runApp('Task7Lab3')
runApp('Task7Lab3')
setwd("~/MATH-4753-Stats/Lab3/Task7Lab3")
runApp()
