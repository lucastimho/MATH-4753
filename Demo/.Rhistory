help.start()
ddt = read.csv("DDT.csv")
ddt <- read.csv("DDT.csv")
#Task 1
getwd()
ddt <- read.csv("DDT.csv")
v <- Intro2R::myreadxl()
library(Intro2R)
v <- Intro2R::myreadxl()
setwd("~/MATH-4753-Stats/Demo")
library(Intro2R)
v <- Intro2R::myreadxl()
mtbe <- v$MBTE
round(81/223, 4)
round(81/103, 4)
round(48/223,4)
round(103/223,4)
round((120+70-48)/223,4)
setwd("~/MATH-4753-Stats/Lab4")
spruce.df = read.csv("SPRUCE.csv")
#get wd
getwd()
#Top six lines
tail(spruce.df)
#Plot the points
windows()
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
library(ggplot2)
windows()
#Plot the points
window()
g = ggplot(spruce.df,mapping = aes(x = BHDiameter, y = Height)) +
geom_point()
print(g)
g = g+ geom_smooth(formula = y~ log(x), method = "lm", col = "steelblue")
g = g + geom_smooth(formula = y ~ x, method = "lm", col = "Black")
g = g + geom_smooth(formula = y~ x+ I(x^2), method ="lm", col = "Red")
print(g)
g = g + geom_smooth(formula = y~ poly(x,3), method ="lm", col = "green3")
g
#load s20x library and make lowess smoother
library(s20x)
trendscatter(Height~BHDiameter,f=0.5,data=spruce.df)
# Now make the linear model
spruce.lm=lm(Height~BHDiameter,data=spruce.df)
summary(spruce.lm)
#residuals  created from the linear model object
height.res=residuals(spruce.lm)
#fitted values made from the linear model object
height.fit=fitted(spruce.lm)
windows()
#Make the plot using the plot function
plot(height.fit,height.res)
# Put a lowess smoother through res vs fitted
trendscatter( height.fit,height.res)
# Quick way to make a residual plot
plot(spruce.lm, which =1)
# Two plots testing normality
windows()
normcheck(spruce.lm,shapiro.wilk = TRUE)
## Quadratic object using the linear model
quad.lm=lm(Height~BHDiameter + I(BHDiameter^2),data=spruce.df)
summary(quad.lm)
add1(spruce.lm,.~.+I(BHDiameter^2))
anova(spruce.lm)
anova(quad.lm)
anova(spruce.lm,quad.lm)
cubic.lm=lm(Height~BHDiameter + I(BHDiameter^2)+I(BHDiameter^3),data=spruce.df)
anova(cubic.lm)
add1(quad.lm,.~.+I(BHDiameter^3))
#add to the scatter plot
windows()
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
coef(quad.lm)
names(quad.lm)
quad.lm$coef[2]
myplot=function(x){
0.86089580 +1.46959217*x  -0.02745726*x^2
}
#Or more general method
myplot=function(x){
quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
curve(myplot, lwd=2, col="steelblue",add=TRUE)
plot(quad.lm, which=1)
plot(quad.lm, which=1)
plot(spruce.lm,which=1)
curve(myplot, lwd=2, col="steelblue",add=TRUE)
plot(quad.lm, which=1)
#Or more general method
myplot=function(x){
quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
curve(myplot, lwd=2, col="steelblue",add=TRUE)
#Or more general method
myplot=function(x){
quad.lm$coef[1] +quad.lm$coef[2]*x  + quad.lm$coef[3]*x^2
}
curve(myplot, lwd=2, col="steelblue",add=TRUE)
plot(quad.lm, which=1)
plot(spruce.lm,which=1)
## Quadratic object using the linear model
quad.lm=lm(Height~BHDiameter + I(BHDiameter^2),data=spruce.df)
summary(quad.lm)
add1(spruce.lm,.~.+I(BHDiameter^2))
anova(spruce.lm)
anova(quad.lm)
anova(spruce.lm,quad.lm)
cubic.lm=lm(Height~BHDiameter + I(BHDiameter^2)+I(BHDiameter^3),data=spruce.df)
anova(cubic.lm)
add1(quad.lm,.~.+I(BHDiameter^3))
#add to the scatter plot
windows()
plot(Height~BHDiameter,bg="Blue",pch=21,cex=1.2,
ylim=c(0,max(Height)),xlim=c(0,max(BHDiameter)),
main="Spruce height prediction",data=spruce.df)
coef(quad.lm)
names(quad.lm)
quad.lm$coef[2]
myplot=function(x){
0.86089580 +1.46959217*x  -0.02745726*x^2
}
curve(myplot, lwd=2, col="steelblue",add=TRUE)
v <- read.csv("SEEDLING.csv")
setwd("~/MATH-4753-Stats/Demo")
v <- read.csv("SEEDLING.csv")
tt <- table(v$Abundance, v$Type)
addt <- addmargins(tt)
addt
round(51/73, 4)
round(14/51,4)
round((17+43-10)/73,4)
round(14/73,4)
