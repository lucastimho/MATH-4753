curve(dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Gamma Density")
xcurve = seq(2, 5, length=1000)
ycurve=dgamma(xcurve, shape=3, scale=2)
polygon(c(2, xcurve, 5),c(0,ycurve,0), col="Red")
curve(dgamma(x, shape=3,scale=2), xlim=c(0,10), ylim=c(0,1), col="Red", lwd=2, ylab="Gamma Density")
xcurve = seq(2, 5, length=1000)
curve(dgamma(x, shape=3,scale=2), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Gamma Density")
xcurve = seq(2, 5, length=1000)
ycurve=dgamma(xcurve, shape=3, scale=2)
polygon(c(2, xcurve, 5),c(0,ycurve,0), col="Red")
prob = round(pgamma(5, shape=3, scale=2) - pgamma(2, shape=3,scale=2), 4)
print(prob)
curve(dgamma(x, shape=6,scale=3), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Gamma Density")
xcurve = seq(1, 4, length=1000)
ycurve=dgamma(xcurve, shape=6, scale=3)
polygon(c(1, xcurve, 4),c(0,ycurve,0), col="Red")
prob = round(pgamma(4, shape=3, scale=2) - pgamma(1, shape=3,scale=2), 4)
print(prob)
curve(dgamma(x, shape=6,scale=3), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Gamma Density")
xcurve = seq(1, 4, length=1000)
ycurve=dgamma(xcurve, shape=6, scale=3)
polygon(c(1, xcurve, 4),c(0,ycurve,0), col="Red")
prob = round(pgamma(4, shape=3, scale=2) - pgamma(1, shape=3,scale=2), 4)
print(prob)
curve(dgamma(x, shape=6,scale=3), xlim=c(0,10), ylim=c(0,0.2), lwd=2, ylab="Gamma Density")
xcurve = seq(1, 4, length=1000)
ycurve=dgamma(xcurve, shape=6, scale=3)
polygon(c(1, xcurve, 4),c(0,ycurve,0), col="Red")
prob = round(pgamma(4, shape=3, scale=2) - pgamma(1, shape=3,scale=2), 4)
print(prob)
curve(dgamma(x, shape=6,scale=3), xlim=c(0,10), ylim=c(0,0.05), lwd=2, ylab="Gamma Density")
xcurve = seq(1, 4, length=1000)
ycurve=dgamma(xcurve, shape=6, scale=3)
polygon(c(1, xcurve, 4),c(0,ycurve,0), col="Red")
prob = round(pgamma(4, shape=3, scale=2) - pgamma(1, shape=3,scale=2), 4)
print(prob)
curve(dgamma(x, shape=3,scale=2), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=3,scale=2), xlim=c(0,10), ylim=c(0,0.2), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=3,scale=2), xlim=c(0,12), ylim=c(0,0.2), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=3,scale=2), xlim=c(0,15), ylim=c(0,0.2), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=3,scale=2), xlim=c(0,15), ylim=c(0,0.15), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=3,scale=2), xlim=c(0,20), ylim=c(0,0.15), lwd=2, ylab="Gamma Density")
xcurve = seq(2, 5, length=1000)
ycurve=dgamma(xcurve, shape=3, scale=2)
polygon(c(2, xcurve, 5),c(0,ycurve,0), col="Red")
prob = round(pgamma(5, shape=3, scale=2) - pgamma(2, shape=3,scale=2), 4)
print(prob)
curve(dgamma(x, shape=6,scale=3), xlim=c(0,10), ylim=c(0,0.05), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=6,scale=3), xlim=c(0,20), ylim=c(0,0.05), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=6,scale=3), xlim=c(0,20), ylim=c(0,0.1), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=6,scale=3), xlim=c(0,20), ylim=c(0,0.08), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=6,scale=3), xlim=c(0,25), ylim=c(0,0.08), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=6,scale=3), xlim=c(0,40), ylim=c(0,0.08), lwd=2, ylab="Gamma Density")
xcurve = seq(1, 4, length=1000)
ycurve=dgamma(xcurve, shape=6, scale=3)
polygon(c(1, xcurve, 4),c(0,ycurve,0), col="Red")
prob = round(pgamma(4, shape=3, scale=2) - pgamma(1, shape=3,scale=2), 4)
print(prob)
prob = round(pgamma(4, shape=6, scale=3) - pgamma(1, shape=6,scale=3), 4)
print(prob)
curve(dgamma(x, shape=2,scale=4), xlim=c(0,40), ylim=c(0,0.08), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=2,scale=4), xlim=c(0,40), ylim=c(0,0.1), lwd=2, ylab="Gamma Density")
curve(dgamma(x, shape=2,scale=4), xlim=c(0,30), ylim=c(0,0.1), lwd=2, ylab="Gamma Density")
xcurve = seq(3, 6, length=1000)
ycurve=dgamma(xcurve, shape=6, scale=3)
polygon(c(3, xcurve, 6),c(0,ycurve,0), col="Red")
xcurve = seq(3, 6, length=1000)
ycurve=dgamma(xcurve, shape=2, scale=4)
polygon(c(3, xcurve, 6),c(0,ycurve,0), col="Red")
prob = round(pgamma(6, shape=2, scale=4) - pgamma(3, shape=2,scale=4), 4)
print(prob)
# Task 4
layout(matrix(1:4, nr=2,nc=2))
curve(dchisq(x,df=1),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=1")
curve(dchisq(x,df=2),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=2")
curve(dchisq(x,df=4),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=4")
curve(dchisq(x,df=20),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=20")
# Task 4
layout(matrix(1:4, nr=2,nc=2))
curve(dchisq(x,df=1),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=1")
curve(dchisq(x,df=2),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=2")
curve(dchisq(x,df=4),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=4")
curve(dchisq(x,df=20),xlim=c(0,10),ylim=c(0,0.5),lwd=2,
ylab="Chisq density", main="df=20")
# Task 4
layout(matrix(1:4, nr=2,nc=2))
curve(dchisq(x,df=1),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=1")
curve(dchisq(x,df=2),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=2")
curve(dchisq(x,df=4),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=4")
curve(dchisq(x,df=20),xlim=c(0,10),ylim=c(0,0.1),lwd=2,
ylab="Chisq density", main="df=20")
curve(dchisq(x,df=1),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=1")
curve(dchisq(x,df=2),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=2")
curve(dchisq(x,df=4),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=4")
curve(dchisq(x,df=20),xlim=c(0,10),ylim=c(0,0.05),lwd=2,
ylab="Chisq density", main="df=20")
curve(dchisq(x,df=1),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=1")
curve(dchisq(x,df=2),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=2")
curve(dchisq(x,df=4),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=4")
curve(dchisq(x,df=20),xlim=c(0,30),ylim=c(0,0.05),lwd=2,
ylab="Chisq density", main="df=20")
curve(dchisq(x,df=20),xlim=c(0,30),ylim=c(0,0.1),lwd=2,
ylab="Chisq density", main="df=20")
curve(dchisq(x,df=20),xlim=c(0,40),ylim=c(0,0.1),lwd=2,
ylab="Chisq density", main="df=20")
curve(dchisq(x,df=1),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=1")
curve(dchisq(x,df=2),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=2")
curve(dchisq(x,df=4),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=4")
curve(dchisq(x,df=4),xlim=c(0,10),ylim=c(0,0.5),lwd=2,
ylab="Chisq density", main="df=4")
par(mfrow=c(1,1))
curve(dchisq(x,df=2),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=2")
xcurve = seq(2, 4, length=1000)
ycurve = dchisq(xcurve, df=2)
polygon(c(2, xcurve, 4), c(0,ycurve,0), col="Red")
prob = round(pchisq(4, df=2) - pchisq(2, df=2), 4)
print(prob)
curve(dchisq(x,df=3),xlim=c(0,10),ylim=c(0,1),lwd=2,
ylab="Chisq density", main="df=3")
curve(dchisq(x,df=3),xlim=c(0,10),ylim=c(0,0.4),lwd=2,
ylab="Chisq density", main="df=3")
xcurve = seq(3, 5, length=1000)
ycurve = dchisq(xcurve, df=3)
polygon(c(3, xcurve, 5), c(0,ycurve,0), col="Red")
prob = round(pchisq(5, df=3) - pchisq(3, df=3), 4)
print(prob)
curve(dchisq(x,df=20),xlim=c(0,40),ylim=c(0,0.1),lwd=2,
ylab="Chisq density", main="df=2")
xcurve = seq(10, 21, length=1000)
ycurve = dchisq(xcurve, df=2)
polygon(c(10, xcurve, 21), c(0,ycurve,0), col="Red")
curve(dchisq(x,df=20),xlim=c(0,40),ylim=c(0,0.1),lwd=2,
ylab="Chisq density", main="df=2")
xcurve = seq(10, 21, length=1000)
ycurve = dchisq(xcurve, df=20)
polygon(c(10, xcurve, 21), c(0,ycurve,0), col="Red")
prob = round(pchisq(21, df=20) - pchisq(10, df=20), 4)
print(prob)
# Task 5
curve(dweibull(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape = 1, Scale = 1")
# Task 5
curve(dweibull(x, shape=3,scale=2), xlim=c(0,20), ylim=c(0,0.15), lwd=2, ylab="Weibull Density", main="Shape = 3, Scale = 2")
# Task 5
curve(dweibull(x, shape=3,scale=2), xlim=c(0,20), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape = 3, Scale = 2")
# Task 5
curve(dweibull(x, shape=3,scale=2), xlim=c(0,20), ylim=c(0,0.8), lwd=2, ylab="Weibull Density", main="Shape = 3, Scale = 2")
# Task 5
curve(dweibull(x, shape=3,scale=2), xlim=c(0,5), ylim=c(0,0.8), lwd=2, ylab="Weibull Density", main="Shape = 3, Scale = 2")
xcurve = seq(2, 5, length=1000)
ycurve=dweibull(xcurve, shape=3, scale=2)
polygon(c(2, xcurve, 5),c(0,ycurve,0), col="Red")
prob = round(pweibull(5, shape=3, scale=2) - pweibull(2, shape=3,scale=2), 4)
print(prob)
curve(dweibull(x, shape=6,scale=3), xlim=c(0,40), ylim=c(0,0.08), lwd=2, ylab="Weibull Density", main="Shape = 6, Scale = 3")
curve(dweibull(x, shape=6,scale=3), xlim=c(0,8), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape = 6, Scale = 3")
curve(dweibull(x, shape=6,scale=3), xlim=c(0,5), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape = 6, Scale = 3")
xcurve = seq(1, 3, length=1000)
ycurve=dweibull(xcurve, shape=6, scale=3)
polygon(c(1, xcurve, 3),c(0,ycurve,0), col="Red")
prob = round(pweibull(3, shape=6, scale=3) - pweibull(1, shape=6,scale=3), 4)
print(prob)
curve(dweibull(x, shape=2,scale=4), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape = 2, Scale = 4")
curve(dweibull(x, shape=2,scale=4), xlim=c(0,10), ylim=c(0,0.3), lwd=2, ylab="Weibull Density", main="Shape = 2, Scale = 4")
xcurve = seq(3, 6, length=1000)
ycurve=dweibull(xcurve, shape=2, scale=4)
polygon(c(3, xcurve, 6),c(0,ycurve,0), col="Red")
prob = round(pweibull(6, shape=2, scale=4) - pweibull(3, shape=2,scale=4), 4)
print(prob)
# Task 3
curve(dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density")
lines(curve(dgamma(x, shape=3,scale=1), col="Red", lwd=2))
lines(curve(dgamma(x, shape=5,scale=1), col="Green", lwd=2))
legend("topright", legend = c("Shape=1,Scale=1", "Shape=3,Scale=1", "Shape=5,Scale=1"), col=c("Blue","Red","Green"), lwd=2)
# Task 3
plot(x, curve(dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density"))
# Task 3
x <- seq(0, 10, 0.1)
plot(x, curve(dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density"))
lines(x, curve(dgamma(x, shape=3,scale=1), col="Red", lwd=2))
lines(x, curve(dgamma(x, shape=5,scale=1), col="Green", lwd=2))
legend("topright", legend = c("Shape=1,Scale=1", "Shape=3,Scale=1", "Shape=5,Scale=1"), col=c("Blue","Red","Green"), lwd=2)
# Task 3
x <- seq(0, 10, 0.1)
plot(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), type="1", col="Blue", lwd=2, ylab="Gamma Density")
lines(x, dgamma(x, shape=3,scale=1), col="Red", lwd=2)
lines(x, dgamma(x, shape=5,scale=1), col="Green", lwd=2)
legend("topright", legend = c("Shape=1,Scale=1", "Shape=3,Scale=1", "Shape=5,Scale=1"), col=c("Blue","Red","Green"), lwd=2)
plot(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density")
lines(x, dgamma(x, shape=3,scale=1), col="Red", lwd=2)
lines(x, dgamma(x, shape=5,scale=1), col="Green", lwd=2)
plot(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), type="1", col="Blue", lwd=2, ylab="Gamma Density")
plot(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), type="2", col="Blue", lwd=2, ylab="Gamma Density")
plot(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), type=1, col="Blue", lwd=2, ylab="Gamma Density")
# Task 3
x <- seq(0, 10, 0.1)
plot(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density")
lines(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density")
# Task 3
x <- seq(0, 10, 0.1)
lines(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density")
lines(x, dgamma(x, shape=3,scale=1), col="Red", lwd=2)
lines(x, dgamma(x, shape=5,scale=1), col="Green", lwd=2)
legend("topright", legend = c("Shape=1,Scale=1", "Shape=3,Scale=1", "Shape=5,Scale=1"), col=c("Blue","Red","Green"), lwd=2)
# Task 3
x <- seq(0, 10, 0.1)
lines(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density")
lines(x, dgamma(x, shape=3,scale=1), col="Red", lwd=2)
# Task 3
x <- seq(0, 10, 0.1)
plot.new
lines(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), col="Blue", lwd=2, ylab="Gamma Density")
lines(x, dgamma(x, shape=3,scale=1), col="Red", lwd=2)
plot(x, dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), type = "l", col="Blue", lwd=2, ylab="Gamma Density")
lines(x, dgamma(x, shape=3,scale=1), col="Red", lwd=2)
lines(x, dgamma(x, shape=5,scale=1), col="Green", lwd=2)
legend("topright", legend = c("Shape=1,Scale=1", "Shape=3,Scale=1", "Shape=5,Scale=1"), col=c("Blue","Red","Green"), lwd=2)
plot(x, dweibull(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), type = "l", col="Blue", lwd=2, ylab="Weibull Density")
lines(x, dweibull(x, shape=3,scale=1), col="Red", lwd=2)
lines(x, dweibull(x, shape=5,scale=1), col="Green", lwd=2)
legend("topright", legend = c("Shape=1,Scale=1", "Shape=3,Scale=1", "Shape=5,Scale=1"), col=c("Blue","Red","Green"), lwd=2)
plot(x, dweibull(x, shape=1,scale=1), xlim=c(0,3), ylim=c(0,5), type = "l", col="Blue", lwd=2, ylab="Weibull Density")
lines(x, dweibull(x, shape=3,scale=1), col="Red", lwd=2)
lines(x, dweibull(x, shape=5,scale=1), col="Green", lwd=2)
legend("topright", legend = c("Shape=1,Scale=1", "Shape=3,Scale=1", "Shape=5,Scale=1"), col=c("Blue","Red","Green"), lwd=2)
# Task 5
layout(matrix(1:4, nr=2,nc=2))
curve(dgamma(x, shape=1,scale=1), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=1")
curve(dgamma(x, shape=3,scale=1), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape=3,Scale=1")
curve(dgamma(x, shape=5,scale=1), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape=5,Scale=1")
curve(dgamma(x, shape=1,scale=4), xlim=c(0,10), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=4")
curve(dgamma(x, shape=1,scale=4), xlim=c(0,40), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=4")
curve(dgamma(x, shape=1,scale=4), xlim=c(0,40), ylim=c(0,0.3), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=4")
# Task 5
layout(matrix(1:4, nr=2,nc=2))
curve(dgamma(x, shape=1,scale=1), xlim=c(0,5), ylim=c(0,1), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=1")
curve(dgamma(x, shape=3,scale=1), xlim=c(0,10), ylim=c(0,0.4), lwd=2, ylab="Weibull Density", main="Shape=3,Scale=1")
curve(dgamma(x, shape=5,scale=1), xlim=c(0,10), ylim=c(0,0.3), lwd=2, ylab="Weibull Density", main="Shape=5,Scale=1")
curve(dgamma(x, shape=1,scale=4), xlim=c(0,20), ylim=c(0,0.3), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=4")
curve(dgamma(x, shape=3,scale=4), xlim=c(0,20), ylim=c(0,0.3), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=4")
curve(dgamma(x, shape=3,scale=4), xlim=c(0,20), ylim=c(0,0.2), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=4")
curve(dgamma(x, shape=3,scale=4), xlim=c(0,30), ylim=c(0,0.2), lwd=2, ylab="Weibull Density", main="Shape=1,Scale=4")
# Task 6
?dbeta()
curve(dgamma(x, shape1=1,shape2=2), xlim=c(0,5), ylim=c(0,1), lwd=2, ylab="Beta Density", main="Shape1=1,Shape2=2")
curve(dbeta(x, shape1=1,shape2=2), xlim=c(0,5), ylim=c(0,1), lwd=2, ylab="Beta Density", main="Shape1=1,Shape2=2")
# Task 6
layout(matrix(1:4, nr=2,nc=2))
curve(dbeta(x, shape1=1,shape2=2), xlim=c(0,5), ylim=c(0,1), lwd=2, ylab="Beta Density", main="Shape1=1,Shape2=2")
curve(dbeta(x, shape1=1,shape2=2), xlim=c(0,2), ylim=c(0,5), lwd=2, ylab="Beta Density", main="Shape1=1,Shape2=2")
curve(dbeta(x, shape1=1,shape2=2), xlim=c(0,2), ylim=c(0,3), lwd=2, ylab="Beta Density", main="Shape1=1,Shape2=2")
curve(dbeta(x, shape1=1,shape2=2), xlim=c(0,2), ylim=c(0,1.5), lwd=2, ylab="Beta Density", main="Shape1=1,Shape2=2")
curve(dbeta(x, shape1=3,shape2=1), xlim=c(0,10), ylim=c(0,0.4), lwd=2, ylab="Beta Density", main="Shape1=3,Shape2=1")
curve(dbeta(x, shape1=3,shape2=1), xlim=c(0,2), ylim=c(0,5), lwd=2, ylab="Beta Density", main="Shape1=3,Shape2=1")
curve(dbeta(x, shape=5,scale=1), xlim=c(0,2), ylim=c(0,5), lwd=2, ylab="Beta Density", main="Shape=5,Scale=1")
curve(dbeta(x, shape1=5,shape2=1), xlim=c(0,2), ylim=c(0,5), lwd=2, ylab="Beta Density", main="Shape=5,Scale=1")
curve(dbeta(x, shape=3,scale=4), xlim=c(0,2), ylim=c(0,5), lwd=2, ylab="Beta Density", main="Shape1=3,Shape2=4")
curve(dbeta(x, shape1=3,shape2=4), xlim=c(0,2), ylim=c(0,5), lwd=2, ylab="Beta Density", main="Shape1=3,Shape2=4")
curve(dbeta(x, shape1=3,shape2=4), xlim=c(0,1), ylim=c(0,3), lwd=2, ylab="Beta Density", main="Shape1=3,Shape2=4")
curve(dbeta(x, shape1=3,shape2=2), xlim=c(0,5), ylim=c(0,0.8), lwd=2, ylab="Beta Density", main="Shape1=3, Shape2=2")
curve(dbeta(x, shape1=3,shape2=2), xlim=c(0,2), ylim=c(0,5), lwd=2, ylab="Beta Density", main="Shape1=3, Shape2=2")
curve(dbeta(x, shape1=3,shape2=2), xlim=c(0,2), ylim=c(0,3), lwd=2, ylab="Beta Density", main="Shape1=3, Shape2=2")
xcurve = seq(0.5, 1, length=1000)
ycurve=dbeta(xcurve, shape1=3, shape2=2)
polygon(c(0.5, xcurve, 1),c(0,ycurve,0), col="Red")
prob = round(pbeta(1, shape1=3, shape2=2) - pbeta(0.5, shape1=3,shape2=2), 4)
print(prob)
curve(dbeta(x, shape1=6,shape2=3), xlim=c(0,5), ylim=c(0,1), lwd=2, ylab="Beta Density", main="Shape1=6, Shape2=3")
curve(dbeta(x, shape1=6,shape2=3), xlim=c(0,2), ylim=c(0,3), lwd=2, ylab="Beta Density", main="Shape1=6, Shape2=3")
xcurve = seq(0.5, 0.75, length=1000)
ycurve=dweibull(xcurve, shape=6, scale=3)
polygon(c(0.5, xcurve, 0.75),c(0,ycurve,0), col="Red")
prob = round(pbeta(0.75, shape1=6, shape2=3) - pbeta(0.5, shape1=6,shape2=3), 4)
ycurve=dweibull(xcurve, shape1=6, shape2=3)
polygon(c(0.5, xcurve, 0.75),c(0,ycurve,0), col="Red")
ycurve=dbeta(xcurve, shape1=6, shape2=3)
polygon(c(0.5, xcurve, 0.75),c(0,ycurve,0), col="Red")
prob = round(pbeta(0.75, shape1=6, shape2=3) - pbeta(0.5, shape1=6,shape2=3), 4)
print(prob)
curve(dbeta(x, shape1=2,shape2=4), xlim=c(0,3), ylim=c(0,2), lwd=2, ylab="Beta Density", main="Shape1=2, Shape2=4")
curve(dbeta(x, shape1=2,shape2=4), xlim=c(0,2), ylim=c(0,3), lwd=2, ylab="Beta Density", main="Shape1=2, Shape2=4")
xcurve = seq(0, 0.25, length=1000)
ycurve=dbeta(xcurve, shape1=2, shape2=4)
polygon(c(0, xcurve, 0.25),c(0,ycurve,0), col="Red")
prob = round(pbeta(0.25, shape1=2, shape2=4) - pbeta(0, shape1=2,shape2=4), 4)
print(prob)
library(s20x)
data("course.df")
course.df
tt <- table(course.df$Gender, course.df$Degree)
addt <- addmargins(tt)
addt
setwd("~/MATH-4753-Stats/Lab7")
# Task 1
getwd()
# Task 2
mychisim <- function(n1=10,sigma1=3,mean1=5,iter=1000,ymax=0.1,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1) # generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
legend(locator(1),c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
mychisim(sigma1=4, mean1=10)
mychisim(sigma1=4, mean1=10, ymax=0.15)
mychisim(sigma1=4, mean1=10, ymax=0.12)
mychisim(sigma1=4, mean1=10, ymax=0.15)
mychimsim(n1=20)
mychisim(n1=20)
mychisim(n1=20, ymax=0.08)
mychisim(n1=100)
mychisim(n1=100, ymax=0.04)
mychisim(n1=200)
mychisim(n1=200, ymax=0.03)
layout(matrix(1:4, nr=2,nc=2))
mychisim(ymax=0.15)
mychisim(n1=20, ymax=0.08)
mychisim(n1=100, ymax=0.04)
mychisim(n1=200, ymax=0.03)
par(mfrow=c(1,1))
# Task 1
getwd()
# Task 2
mychisim <- function(n1=10,sigma1=4,mean1=10,iter=1000,ymax=0.1,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1) # generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
w=(n1-1)*ssq1/sigma1^2      #chi-sq stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]-1)*s^2,sigma^2)) #mathematical annotation -see ?plotmath
# legend(locator(1),c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
layout(matrix(1:4, nr=2,nc=2))
mychisim(ymax=0.15)
mychisim(n1=20, ymax=0.08)
mychisim(n1=100, ymax=0.04)
mychisim(n1=200, ymax=0.03)
par(mfrow=c(1,1))
chisq <- mychisim(iter=1500, mean1=20, sigma1=10)
?hist()
hist(chisq$w)
# Task 3
myTsim <- function(n1=10,sigma1=4,mean1=10,iter=1000,ymax=0.1,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
# legend(locator(1),c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
layout(matrix(1:4, nr=2,nc=2))
myTsim()
par(mfrow=c(1,1))
# Task 3
myTsim <- function(n1=10,sigma1=4,mean1=10,iter=1000,ymax=0.5,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
sd1=apply(data1.mat,2,sd) # sd
ybar=apply(data1.mat,2,mean)  # mean
w=(ybar-mean1)/(sd1/sqrt(n1))      #T stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]," = ",n1," statistic = ",T," iterations= ",iter)),
xlab=expression(paste(T, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1-1),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(y)-mu),s/sqrt(n1))) #mathematical annotation -see ?plotmath
# legend(locator(1),c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="T")) # some output to use if needed
}
myTsim()
myTsim(n1=20)
myTsim(n1=100)
myTsim(n1=200)
T <- myTsim(iter=1500, mean1=20, sigma1=10)
hist(T$w)
layout(matrix(1:4, nr=2,nc=2))
tsim1 <- myTsim()
tsim2 <- myTsim(n1=20)
tsim3 <- myTsim(n1=100)
tsim4 <- myTsim(n1=200)
par(mfrow=c(1,1))
T <- myTsim(iter=1500, mean1=20, sigma1=10)
hist(T$w)
# Task 4
mychisim2<-function(n1=10,n2=10,sigma1=4,sigma2=4,mean1=5,mean2=10,iter=1000,ymax=0.07,...){    # adjust ymax to make graph fit
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=(n1+n2-2)*spsq/(sigma1^2)#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",chi^2)),
xlab=expression(paste(chi^2, "Statistic",sep=" ")), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dchisq(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(chi^2==frac((n[1]+n[2]-2)*S[p]^2,sigma^2)) #mathematical annotation -see ?plotmath
# legend(locator(1),c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title) # Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="Chi-sq")) # some output to use if needed
}
chi2sam1()
chi2sam1 <- mychisim2()
chi2sam2 <- mychisim2(n1=20, mean1=3, mean2=5, sigma1=10, sigma2=10)
chi2sam3 <- mychisim2(n1=50, n2=50, iter=10000)
chi2sam3 <- mychisim2(n1=50, n2=50, iter=10000, ymax=0.04)
chi2sam4 <- mychisim2(n1=80, n2=50, mean=3, mean2=5, sigma1=10, sigma2=10)
chi2sam4 <- mychisim2(n1=80, n2=50, mean=3, mean2=5, sigma1=10, sigma2=10, ymax=0.03)
chi2sam <- mychisim2(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.07)
hist(chi2sam$w)
t2sam1 <- myTsim(n2=10, sigma1=4, sigma2=4)
t2sam2 <- myTsim(n1=20, n2=10, mean1=3, mean2=5, sigma1=10, sigma2=10)
t2sam3 <- myTsim(n1=50, n2=50, sigma1=4, sigma2=4, iter=10000)
t2sam4 <- myTsim(n1=80, n2=50, mean1=3, mean2=5, sigma1=10, sigma2=10, iter=10000)
t2sam1 <- myTsim2(n2=10, sigma1=4, sigma2=4)
# Task 5
myTsim2 <- function(n1=10,n2=14,sigma1=3,sigma2=3,mean1=5,mean2=10,iter=1000,ymax=0.5,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ybar1= apply(data1.mat,2,mean)
ssq2=apply(data2.mat,2,var)
ybar2=apply(data2.mat,2,mean)
spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=((ybar1-ybar2)-(mean1-mean2))/sqrt(spsq*(1/n1+1/n2))#sigma1=sigma2,  Chi square stat
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",T)),
xlab=paste(" T Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(dt(x,n1+n2-2),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(T==frac((bar(Y)[1]-bar(Y)[2])-(mu[1]-mu[2]),S[p]*sqrt(frac(1,n[1])+frac(1,n[2])))) #mathematical annotation -see ?plotmath
# legend(2,0.2,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return(list(w=w,summary=summary(w),sdw=sd(w),fun="T")) # some output to use if needed
}
t2sam1 <- myTsim2(n2=10, sigma1=4, sigma2=4)
t2sam2 <- myTsim2(n1=20, n2=10, mean1=3, mean2=5, sigma1=10, sigma2=10)
t2sam3 <- myTsim2(n1=50, n2=50, sigma1=4, sigma2=4, iter=10000)
t2sam4 <- myTsim2(n1=80, n2=50, mean1=3, mean2=5, sigma1=10, sigma2=10, iter=10000)
t2sam <- myTsim()
hist(t2sam$w)
t2sam <- myTsim(iter=10000)
hist(t2sam$w)
# Task 6
myFsim2<-function(n1=10,n2=14,sigma1=3,sigma2=2,mean1=5,mean2=10,iter=1000,ymax=0.9,...){
y1=rnorm(n1*iter,mean=mean1,sd=sigma1)# generate iter samples of size n1
y2=rnorm(n2*iter,mean=mean2,sd=sigma2)
data1.mat=matrix(y1,nrow=n1,ncol=iter,byrow=TRUE) # Each column is a sample size n1
data2.mat=matrix(y2,nrow=n2,ncol=iter,byrow=TRUE)
ssq1=apply(data1.mat,2,var) # ssq1 is s squared
ssq2=apply(data2.mat,2,var)
#spsq=((n1-1)*ssq1 + (n2-1)*ssq2)/(n1+n2-2) # pooled s squared
w=ssq1*sigma2^2/(ssq2*sigma1^2) #
hist(w,freq=FALSE, ylim=c(0,ymax), # Histogram with annotation
main=substitute(paste("Sample size = ",n[1]+n[2]," = ",n1+n2," statistic = ",F)),
xlab=paste("F Statistic",sep=""), las=1)
lines(density(w),col="Blue",lwd=3) # add a density plot
curve(df(x,n1-1,n2-1),xlim=c(0,6),add=TRUE,col="Red",lty=2,lwd=3) # add a theoretical curve
title=expression(F==frac(s[1]^2,s[2]^2)*frac(sigma[2]^2,sigma[1]^2)) #mathematical annotation -see ?plotmath
legend(6,0.5,c("Simulated","Theoretical"),col=c("Blue","Red"),lwd=4,lty=1:2,bty="n",title=title)# Legend #
return(list(w=w,summary=summary(w),sd=sd(w),fun="F")) # some output to use if needed
}
fsim1 <- myFsim2(n2=10, sigma1=4, sigma2=4)
fsim2 <- myFsim2(n1=20, n2=10, mean1=3, mean2=5, sigma1=10, sigma2=10)
fsim3 <- myFsim2(n1=50, n2=50, sigma1=4, sigma2=4, iter=10000)
fsim3 <- myFsim2(n1=50, n2=50, sigma1=4, sigma2=4, iter=10000, ymax=1.2)
fsim3 <- myFsim2(n1=50, n2=50, sigma1=4, sigma2=4, iter=10000, ymax=1.5)
fsim4 <- myFsim2(n1=80, n2=50, mean1=3, mean2=5, sigma1=10, sigma2=10, iter=10000)
fsim4 <- myFsim2(n1=80, n2=50, mean1=3, mean2=5, sigma1=10, sigma2=10, iter=10000, ymax=1.5)
fsim4 <- myFsim2(n1=80, n2=50, mean1=3, mean2=5, sigma1=10, sigma2=10, iter=10000, ymax=1.7)
fsim <- myFsim2()
hist(fsim$w)
